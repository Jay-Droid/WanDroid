apply from: "../../buildgradle/base/app.gradle"


android {

    buildTypes.each {
        Properties props
        if (it.name == "debug") {
            props = rootProject.ext.environment['debugEnvironmentProps']
        } else {
            props = rootProject.ext.environment['liveEnvironmentProps']
        }
        it.buildConfigField("String", "BASE_URL", String.format(Locale.getDefault(), "\"%s\"", props["base_url"]))
    }

    sourceSets {
        main {
            def buildWithIndex = Integer.valueOf(buildWith)
            rootProject.bizComponents.each {
                def index = Integer.valueOf(it.index)
                if (index != 0 && buildWithIndex == index) {
                    //单组件调试
                    if (!it.name.isEmpty()) {
                        manifest.srcFile "src/debug/$it.name/AndroidManifest.xml"
                    }
                } else {
                    if (buildWithIndex == 0) {
                        //全量调试, 合并到宿主中
                        manifest.srcFile 'src/main/AndroidManifest.xml'
                        //正式版本时.剔除debug文件夹下的所有调式文件
                        resources { exclude 'src/debug/*' }
                    }
                }
            }
        }
    }
}


dependencies {
    def buildWithIndex = Integer.valueOf(rootProject.buildWith)
    println "buildWith in dependencies: " + buildWithIndex
    rootProject.bizComponents.each {
        def index = Integer.valueOf(it.index)
        println "bizComponent: name=" + it.name + ", index=" + index + ", depend=" + it.depend + ", desc=" + it.desc
        if (index != 0 && buildWithIndex == index) {
            //单组件调试
            if (!it.name.isEmpty()) {
                implementation project(path: ":jb-biz:biz-$it.name")
                if (!it.depend.isEmpty()) {
                    implementation project(path: ":jb-biz:biz-$it.depend")
                }
            }
        } else {
            //全量调试
            if (buildWithIndex == 0 && !it.name.isEmpty()) {
                implementation project(path: ":jb-biz:biz-$it.name")
            }
        }
    }

    //公共基础组件
    implementation project(path: ':jc-base:base-wan')
    implementation rootProject.ext.jdispatcherApi
    kapt rootProject.ext.jdispatcherCompiler
}


