ext {
    android = [
            compileSdkVersion: 29,
            buildToolsVersion: "29.0.2",
            minSdkVersion    : 21,
            targetSdkVersion : 29,
            versionCode      : 1,
            versionName      : "1.0.0"
    ]

    version = [
            androidSupportSdkVersion: "28.0.0",
            retrofitSdkVersion      : "2.7.0",
            dagger2SdkVersion       : "2.19",
            glideSdkVersion         : "4.8.0",
            butterknifeSdkVersion   : "10.2.1",
            rxlifecycleSdkVersion   : "1.0",
            rxlifecycle2SdkVersion  : "2.2.2",
            espressoSdkVersion      : "3.0.1",
            canarySdkVersion        : "1.5.4",
            circleImageviewVersion  : "2.1.0",
            kotlinVersion           : "1.3.50"
    ]

    dependencies = [
            //AndroidX
            "appcompat"                : "androidx.appcompat:appcompat:1.1.0",
            "core-ktx"                 : "androidx.core:core-ktx:1.1.0",
            "constraintlayout"         : "androidx.constraintlayout:constraintlayout:1.1.3",

            //support
            "appcompat-v7"             : "com.android.support:appcompat-v7:${version["androidSupportSdkVersion"]}",
            "design"                   : "com.android.support:design:${version["androidSupportSdkVersion"]}",
            "support-v4"               : "com.android.support:support-v4:${version["androidSupportSdkVersion"]}",
            "cardview-v7"              : "com.android.support:cardview-v7:${version["androidSupportSdkVersion"]}",
            "annotations"              : "com.android.support:support-annotations:${version["androidSupportSdkVersion"]}",
            "recyclerview-v7"          : "com.android.support:recyclerview-v7:${version["androidSupportSdkVersion"]}",

            //network
            "retrofit"                 : "com.squareup.retrofit2:retrofit:${version["retrofitSdkVersion"]}",
            "retrofit-converter-gson"  : "com.squareup.retrofit2:converter-gson:${version["retrofitSdkVersion"]}",
            "retrofit-adapter-rxjava2" : "com.squareup.retrofit2:adapter-rxjava2:${version["retrofitSdkVersion"]}",
            "okhttp3"                  : "com.squareup.okhttp3:okhttp:4.2.1",
            "logging-interceptor"      : "com.squareup.okhttp3:logging-interceptor:4.2.1",
            "okhttp-urlconnection"     : "com.squareup.okhttp:okhttp-urlconnection:2.0.0",
            "chuck"                    : "com.readystatesoftware.chuck:library:1.1.0",
            "chuck-no-op"              : "com.readystatesoftware.chuck:library-no-op:1.1.0",
            "glide"                    : "com.github.bumptech.glide:glide:${version["glideSdkVersion"]}",
            "glide-compiler"           : "com.github.bumptech.glide:compiler:${version["glideSdkVersion"]}",
            "glide-loader-okhttp3"     : "com.github.bumptech.glide:okhttp3-integration:${version["glideSdkVersion"]}",
            "picasso"                  : "com.squareup.picasso:picasso:2.5.2",
            "persistentcookiejar"      : "com.github.franmontiel:PersistentCookieJar:v1.0.1",

            //view
            "autolayout"               : "com.zhy:autolayout:1.4.5",
            "butterknife"              : "com.jakewharton:butterknife:${version["butterknifeSdkVersion"]}",
            "butterknife-compiler"     : "com.jakewharton:butterknife-compiler:${version["butterknifeSdkVersion"]}",
            "pickerview"               : "com.contrarywind:Android-PickerView:3.2.5",
            "photoview"                : "com.github.chrisbanes.photoview:library:1.2.3",
            "numberprogressbar"        : "com.daimajia.numberprogressbar:library:1.2@aar",
            "nineoldandroids"          : "com.nineoldandroids:library:2.4.0",
            "paginate"                 : "com.github.markomilos:paginate:0.5.1",
            "vlayout"                  : "com.alibaba.android:vlayout:1.1.0@aar",
            "lottie"                   : "com.airbnb.android:lottie:2.7.0",
            "statusbar-util"           : "com.jaeger.statusbarutil:library:1.5.1",
            "autosize"                 : "me.jessyan:autosize:1.1.1",
            "recycler-adapter-helper"  : "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.45-androidx",
            "smart-refresh-layout"     : "com.scwang.smartrefresh:SmartRefreshLayout:1.1.0",
            "banner"                   : "com.youth.banner:banner:1.4.10",
            "circleimageview"          : "de.hdodenhof:circleimageview:${version["circleImageviewVersion"]}",

            //rx2
            "rxandroid2"               : "io.reactivex.rxjava2:rxandroid:2.1.0",
            "rxjava2"                  : "io.reactivex.rxjava2:rxjava:2.2.3",
            "rxlifecycle2"             : "com.trello.rxlifecycle2:rxlifecycle:${version["rxlifecycle2SdkVersion"]}",
            "rxlifecycle2-android"     : "com.trello.rxlifecycle2:rxlifecycle-android:${version["rxlifecycle2SdkVersion"]}",
            "rxlifecycle2-components"  : "com.trello.rxlifecycle2:rxlifecycle-components:${version["rxlifecycle2SdkVersion"]}",
            "rxcache2"                 : "com.github.VictorAlbertos.RxCache:runtime:1.8.3-2.x",
            "rxpermissions2"           : "com.github.tbruyelle:rxpermissions:0.10.2",
            "rxerrorhandler2"          : "me.jessyan:rxerrorhandler:2.1.1",


            //kotlin
            "kotlin-stdlib-jdk7"       : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${version["kotlinVersion"]}",

            //tools
            "dagger2"                  : "com.google.dagger:dagger:${version["dagger2SdkVersion"]}",
            "dagger2-android"          : "com.google.dagger:dagger-android:${version["dagger2SdkVersion"]}",
            "dagger2-android-support"  : "com.google.dagger:dagger-android-support:${version["dagger2SdkVersion"]}",
            "dagger2-compiler"         : "com.google.dagger:dagger-compiler:${version["dagger2SdkVersion"]}",
            "dagger2-android-processor": "com.google.dagger:dagger-android-processor:${version["dagger2SdkVersion"]}",
            "androideventbus"          : "org.simple:androideventbus:1.0.5.1",
            "eventbus"                 : "org.greenrobot:eventbus:3.1.1",
            "otto"                     : "com.squareup:otto:1.3.8",
            "gson"                     : "com.google.code.gson:gson:2.8.5",
            "multidex"                 : "com.android.support:multidex:1.0.3",
            "javax.annotation"         : "javax.annotation:jsr250-api:1.0",
            "arouter"                  : "com.alibaba:arouter-api:1.5.0",
            "arouter-compiler"         : "com.alibaba:arouter-compiler:1.2.2",
            "progressmanager"          : "me.jessyan:progressmanager:1.5.0",
            "retrofit-url-manager"     : "me.jessyan:retrofit-url-manager:1.4.0",
            "lifecyclemodel"           : "me.jessyan:lifecyclemodel:1.0.1",

            //test
            "junit"                    : "junit:junit:4.12",
            "junit-androidx"           : "androidx.test.ext:junit:1.1.1",
            "androidJUnitRunner"       : "android.support.test.runner.AndroidJUnitRunner",
            "runner"                   : "com.android.support.test:runner:1.0.1",
            "espresso-core-androidx"   : "androidx.test.espresso:espresso-core:3.2.0",
            "espresso-core"            : "com.android.support.test.espresso:espresso-core:${version["espressoSdkVersion"]}",
            "espresso-contrib"         : "com.android.support.test.espresso:espresso-contrib:${version["espressoSdkVersion"]}",
            "espresso-intents"         : "com.android.support.test.espresso:espresso-intents:${version["espressoSdkVersion"]}",
            "mockito-core"             : "org.mockito:mockito-core:1.+",
            "timber"                   : "com.jakewharton.timber:timber:4.7.1",
            "logger"                   : "com.orhanobut:logger:2.2.0",
            "canary-debug"             : "com.squareup.leakcanary:leakcanary-android:${version["canarySdkVersion"]}",
            "canary-release"           : "com.squareup.leakcanary:leakcanary-android-no-op:${version["canarySdkVersion"]}",
            "umeng-analytics"          : "com.umeng.analytics:analytics:6.0.1",

            //sdk
            "wechat"                   : "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+",

    ]


    /* ========================================================= */
    /* ==========================签名信息======================== */
    /* ========================================================= */
    println("/* ========================签名信息======================= */")

    def rootDir = rootDir.path
    println("rootDir:$rootDir")
    //签名信息
    def keyProps = getKeyProperties()
    println("keyProps" + keyProps.toString())
    sign = [
            //debug sign
            aliasDebug    : keyProps["aliasDebug"],
            passDebug     : keyProps["passDebug"],
            storeDebug    : file(keyProps["storeDebug"]),
            storePassDebug: keyProps["storePassDebug"],
            //release sign
            alias         : keyProps["alias"],
            pass          : keyProps["pass"],
            store         : file(keyProps["store"]),
            storePass     : keyProps["storePass"]
    ]

    /* ========================================================= */
    /* ========================环境变量信息======================= */
    /* ========================================================= */
    println("/* ========================环境变量信息======================= */")
    def debugEnvironmentProps = getEnvironmentProperties(getEnvironmentPropertyType())
    def liveEnvironmentProps = getEnvironmentProperties("live")
    println("debugEnvironmentProps:$debugEnvironmentProps")
    println("liveEnvironmentProps:$liveEnvironmentProps")
    println("propertyType:${getEnvironmentPropertyType()}")
    environment = [
            // 测试环境 Properties dev local
            debugEnvironmentProps: debugEnvironmentProps,
            // 线上环境 Properties live
            liveEnvironmentProps : liveEnvironmentProps
    ]

    /* ========================================================= */
    /* ======================组件Maven仓库信息==================== */
    /* ========================================================= */
    println("/* ========================组件Maven仓库信息======================= */")
    //签名信息
    def mavenProps = getMavenProperties()
    println("mavenProps" + mavenProps.toString())
    mavenRepo = [
            //MavenProperties
            mavenProps    : mavenProps,
            //local
            repoPathLocal : mavenProps["repoPathLocal"],
            //remote
            repoPathRemote: mavenProps["repoPathRemote"]
    ]

}

/**
 * 获取属性总配置文件
 * @return Properties实例 config
 */
Properties getConfigProperties() {
    def CONFIG_PATH = "./buildsystem/config.properties"
    return getProperties(CONFIG_PATH)
}

/**
 * 获取属性配置文件公共方法
 * @param propPath Properties配置文件路径
 * @return Properties实例
 */
Properties getProperties(String propPath) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(propPath)))
    return props
}

/**
 * 获取签名配置文件
 * @return Properties实例  签名
 */
Properties getKeyProperties() {
    Properties configProperties = getConfigProperties()
    // 使用assert确保存在该属性否则报错，避免错误打包
    assert configProperties['keystore.props.file']
    return getProperties(configProperties.getProperty("keystore.props.file"))
}

/**
 * 获取Maven仓库配置文件
 * @return Properties实例  Maven
 */
Properties getMavenProperties() {
    Properties configProperties = getConfigProperties()
    // 使用assert确保存在该属性否则报错，避免错误打包
    assert configProperties['maven.props.file']
    return getProperties(configProperties.getProperty("maven.props.file"))
}

/**
 * 获取当前指定的环境类型，缺省dev
 * @return
 */
String getEnvironmentPropertyType() {
    Properties localProperties = getConfigProperties()
    return localProperties.getProperty("propertyType", "dev")
}

//根据环境类型获取环境配置文件
Properties getEnvironmentProperties(String propertyType) {
    Properties localProperties = getConfigProperties()
    String environmentPath = "${propertyType}.props.file"
    // 使用assert确保存在该属性否则报错，避免错误打包
    assert localProperties[environmentPath]
    return getProperties(localProperties.getProperty(environmentPath))
}


